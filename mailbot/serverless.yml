service: mailbot

frameworkVersion: '3'

useDotenv: true

plugins:
  - serverless-localstack
  - serverless-plugin-typescript
  - serverless-offline

custom:
  localstack:
    stages:
      - dev
    host: ${env:AWS_ENDPOINT}
    endgePort: 4566

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: dev
  profile: localstack
  memorySize: 128
  timeout: 15
  logRetentionInDays: 7
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["SinteseDynamoDBTable", "Arn" ] }
    - Effect: Allow
      Action:
        - s3:PutObject
      Resource:
        - { "Fn::GetAtt": ["SinteseS3Bucket", "Arn" ] }
    - Effect: Allow
      Action:
        - sqs:SendMessage
      Resource:
        - { "Fn::GetAtt": ["MailbotSQSQueue", "Arn" ] }

functions:
  mailapi:
    handler: ./bin/lambda/api.handler
    environment:
      JWT_KEY: ${env:JWT_KEY}                
      AWS_ENDPOINT: ${env:AWS_ENDPOINT}
      AWS_DEFAULT_REGION: ${env:AWS_DEFAULT_REGION}
      AWS_ACCESS_KEY_ID: ${env:AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${env:AWS_SECRET_ACCESS_KEY}      
    events:
      - http:
          path: /
          method: ANY
          cors: true
          private: true
      - http:
          path: /{any+}
          method: ANY
          cors: true
          private: true

  mailsqs:
    handler: ./bin/lambda/sqs.handler
    environment:
      JWT_KEY: ${env:JWT_KEY}
      SQS_QUEUE_URL: { "Fn::GetAtt": ["MailbotSQSQueue", "QueueUrl"] }
      GOOGLE_CLIENT_ID: ${env:GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${env:GOOGLE_CLIENT_SECRET}
      AWS_ENDPOINT: ${env:AWS_ENDPOINT}
      AWS_DEFAULT_REGION: ${env:AWS_DEFAULT_REGION}
      AWS_ACCESS_KEY_ID: ${env:AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${env:AWS_SECRET_ACCESS_KEY}      
    events:
      - sqs:
          arn: { "Fn::GetAtt": ["MailbotSQSQueue", "Arn" ] }
          batchSize: 1
          enabled: true

resources:
  Resources:
    MailbotSQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: mailbot
        DelaySeconds: 0
    SinteseS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: sintese
    SinteseDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: sintese
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: GSI1_PK
            AttributeType: S
          - AttributeName: GSI1_SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:         
          - IndexName: GSI_1
            Projection:
              ProjectionType: ALL
            KeySchema:
            - AttributeName: GSI1_PK
              KeyType: HASH
            - AttributeName: GSI1_SK
              KeyType: RANGE